p_grid <- seq( from=0 , to=1 , length.out=1000 )
prior <- rep(1,1000)
likelihood <- dbinom( 3 , size=3 , prob=p_grid )
posterior <- likelihood * prior
posterior <- posterior / sum(posterior)
samples <- sample( p_grid , size=1e4 , replace=TRUE , prob=posterior )
## R code 3.12
PI( samples , prob=0.5 )
## R code 3.13
HPDI( samples , prob=0.5 )
## R code 3.14
p_grid[ which.max(posterior) ]
## R code 3.15
chainmode( samples , adj=0.01 )
## R code 3.16
mean( samples )
median( samples )
## R code 3.17
sum( posterior*abs( 0.5 - p_grid ) )
## R code 3.18
loss <- sapply( p_grid , function(d) sum( posterior*abs( d - p_grid ) ) )
loss
head(p_grid)
loss
plot(loss)
p_grid <- seq( from=0 , to=1 , length.out=1000 )
prior <- rep( 1 , 1000 )
likelihood <- dbinom( 6 , size=9 , prob=p_grid )
posterior <- likelihood * prior
posterior <- posterior / sum(posterior)
set.seed(100)
samples <- sample( p_grid , prob=posterior , size=1e4 , replace=TRUE )
prior
source("https://bioconductor.org/biocLite.R")
biocLite("DESeq2")
library(deseq2)
library(dgseq2)
library(DEseq2)
library(DESeq2)
ver()
v()
r()
r
r.ver()
ver()
plot(1:10,2:11)
x<-1:10
x<-1:10
y<-2:11
plot(x,y)
x
y
plot(x,y)
# Test#
x<-1:10#
y<-2:11#
x#
y#
plot(x,y)
setA.row3<-c("48C2","48F9","Col","48A7","48C7","48B2","48B8","48B4")
setA.row1<-c("47J6","Col","47J10","48F6","47J1","48A9","48G1","Col")
setA.row2<-c("47I9","47J4","48D6","Col","48E2","48C4","48D9","48D3")
setA.row3<-c("48C2","48F9","Col","48A7","48C7","48B2","48B8","48B4")
###
setB.row1<-sample(setA.row3,8)
setB.row2<-sample(setA.row1,8)
setB.row3<-sample(setA.row2,8)
setB.row1<-sample(setA.row3,8)
set.seed(1)
# I forgot to set.seed and sprinkled seeds. (042516)
setA.row1<-c("47J6","Col","47J10","48F6","47J1","48A9","48G1","Col")
setA.row2<-c("47I9","47J4","48D6","Col","48E2","48C4","48D9","48D3")
setA.row3<-c("48C2","48F9","Col","48A7","48C7","48B2","48B8","48B4")
###
setB.row1<-sample(setA.row3,8)
setB.row2<-sample(setA.row1,8)
setB.row3<-sample(setA.row2,8)
setB.row1
sample(setA.row3,8)
sample(setA.row3,8)
sample(setA.row3,8)
sample(setA.row3,8)
sample(setA.row3,8)
ls()
rm(list=ls())
### R/FR function
R_FR_ratio<-function(spec,resolution){ #1st column is wavelength(nm), 2nd column is fluence rate (micro E) measured by Black Comet
#print(as.character(spec))
R<-sum(as.numeric(as.vector(spec[as.vector(spec[,1])>=655&as.vector(spec[,1])<=665,2])))* resolution;#print(paste("R=",R))
FR<-sum(as.numeric(as.vector(spec[as.vector(spec[,1])>=725&as.vector(spec[,1])<=735,2])))* resolution;#print(paste("FR=",FR))
#print(paste("R/FR=",R/FR))
return(R/FR)
}
#PAR function
PAR<-function(spec, resolution){
PAR.microE<-sum(as.numeric(as.vector(spec[as.vector(spec[,1])>=400&as.vector(spec[,1])<=700,2])))* resolution
return(PAR.microE)
}
## 050316
# GH1 # Angle 1: straight up (no surrounding plant)
GH1050316<-read.table("050316GH1.IRR",header=FALSE,skip=2)
PAR(GH1050316,0.5) # 492
R_FR_ratio(GH1050316,0.5) # 0.61
# GH2 Angle 2: ~90 degree (no surrounding plant)
GH2050316<-read.table("050316GH2.IRR",header=FALSE,skip=2)
PAR(GH2050316,0.5) # 388
R_FR_ratio(GH2050316,0.5) # 0.97
# GH3 straight up with surrounding plants
GH3050316<-read.table("050316GH3.IRR",header=FALSE,skip=2)
PAR(GH3050316,0.5) # 256
R_FR_ratio(GH3050316,0.5) # 0.66
# GH4 -90 degree with surrounding plants
GH4050316<-read.table("050316GH4.IRR",header=FALSE,skip=2)
PAR(GH4050316,0.5) # 315
R_FR_ratio(GH4050316,0.5) # 0.89
library("swirl", lib.loc="/Library/Frameworks/R.framework/Versions/3.2/Resources/library")
library(Swirl)
library(swirl)
swirl
main()
swirl()
main()
swirl()
swirl()
swirl()
detach(swirl)
detach("swirl")
search()
detach("package:swirl")
library(swirl)
swirl()
2634/7.5
library(ggplot2)
# functions used in this script
## vlookup
#Vlookup in R (https://gist.github.com/jnmaloof/7367450)
#Version 0.3 November 12, 2013
#Return senesical results if return column is a factor
#Version 0.2 November 11, 2013
#Require first column of table to be numeric if range lookup is being done
#Change defaults to larger=FALSE
#Julin Maloof
vlookup <- function(ref, #the value or values that you want to look for
table, #the table where you want to look for it; will look in first column
column, #the column that you want the return data to come from,
range=FALSE, #if there is not an exact match, return the closest?
larger=FALSE) #if doing a range lookup, should the smaller or larger key be used?)
{
if(!is.numeric(column) & !column %in% colnames(table)) {
stop(paste("can't find column",column,"in table"))
}
if(range) {
if(!is.numeric(table[,1])) {
stop(paste("The first column of table must be numeric when using range lookup"))
}
table <- table[order(table[,1]),]
index <- findInterval(ref,table[,1])
if(larger) {
index <- ifelse(ref %in% table[,1],index,index+1)
}
output <- table[index,column]
output[!index <= dim(table)[1]] <- NA
} else {
output <- table[match(ref,table[,1]),column]
output[!ref %in% table[,1]] <- NA #not needed?
}
dim(output) <- dim(ref)
output
}
```
# data formating
```{r}
# setup working directory
if(Sys.info()["user"]=="nozue") {
homedir<-"/Volumes/data_work/Data6/data_JM4/2016pif3gi2_timelapse"
} # customize homedir
setwd(homedir)
#
# reading file time stamp
## This file was created in MSDOS (Celia cam computer) by "dir" command
filetime<-read.table("2016pifgi2filetime2s.txt",skip=8)#,nrows=869)
head(filetime)
tail(filetime)
# reading file name used in exp1
exp4.filename<-read.table("exp4.file.txt",skip=1) # 540 files
# add 336 to 1 (frmae number in exp1 avi )
exp4.filename$frame<-1:nrow(exp4.filename)
# reading file name used in exp5
exp5.filename<-read.table("exp5.file.txt",nrow=659) # skip the last line "exp5.file.txt"
#exp2.filename$frame<-1:nrow(exp2.filename) # is this true? no
exp5.filename.number<-gsub("(exp4000)([[:digit:]]+)(.jpg)","\\2",exp5.filename[,1])
exp5.filename$frame<- as.integer(exp5.filename.number) - min(as.integer(exp5.filename.number))+1 # more general formula
# reading file name used in exp6
exp6.filename<-read.table("exp6.file.txt",nrow=1061) # skip the last line "exp6.file.txt"
exp6.filename.number<-gsub("(exp5000)([[:digit:]]+)(.jpg)","\\2",exp6.filename[,1])
exp6.filename$frame<- as.integer(exp6.filename.number) - min(as.integer(exp6.filename.number))+1 #
# reading hypocotyl length data
hyp.data<-read.csv("Marian_gi2pif3_hyp_data - 2nd sets.csv")
# need to clean up data (no duplicate)
hyp.data$id<-paste(sub("(2016pifgi2exp)(1a_|1b_|2a_|2b_|3a_|3b_)(Col|gi2|pif4pif5|gi2pif4|gi2pif5|gi2pif4pif5)(.avi:)([[:digit:]]+)([[:print:]]+)","\\1\\2\\3\\4\\5",hyp.data$label),hyp.data$rep,sep="_")
hyp.data[duplicated(hyp.data$id),] # should be none. If duplicated, remove duplicated data from Google Sheet
library(ggplot2)
# functions used in this script
## vlookup
#Vlookup in R (https://gist.github.com/jnmaloof/7367450)
#Version 0.3 November 12, 2013
#Return senesical results if return column is a factor
#Version 0.2 November 11, 2013
#Require first column of table to be numeric if range lookup is being done
#Change defaults to larger=FALSE
#Julin Maloof
vlookup <- function(ref, #the value or values that you want to look for
table, #the table where you want to look for it; will look in first column
column, #the column that you want the return data to come from,
range=FALSE, #if there is not an exact match, return the closest?
larger=FALSE) #if doing a range lookup, should the smaller or larger key be used?)
{
if(!is.numeric(column) & !column %in% colnames(table)) {
stop(paste("can't find column",column,"in table"))
}
if(range) {
if(!is.numeric(table[,1])) {
stop(paste("The first column of table must be numeric when using range lookup"))
}
table <- table[order(table[,1]),]
index <- findInterval(ref,table[,1])
if(larger) {
index <- ifelse(ref %in% table[,1],index,index+1)
}
output <- table[index,column]
output[!index <= dim(table)[1]] <- NA
} else {
output <- table[match(ref,table[,1]),column]
output[!ref %in% table[,1]] <- NA #not needed?
}
dim(output) <- dim(ref)
output
}
```
# data formating
```{r}
# setup working directory
if(Sys.info()["user"]=="nozue") {
homedir<-"/Volumes/data_work/Data6/data_JM4/2016pif3gi2_timelapse"
} # customize homedir
setwd(homedir)
#
# reading file time stamp
## This file was created in MSDOS (Celia cam computer) by "dir" command
filetime<-read.table("2016pifgi2filetime2s.txt",skip=8)#,nrows=869)
head(filetime)
tail(filetime)
# reading file name used in exp1
exp4.filename<-read.table("exp4.file.txt",skip=1) # 540 files
# add 336 to 1 (frmae number in exp1 avi )
exp4.filename$frame<-1:nrow(exp4.filename)
# reading file name used in exp5
exp5.filename<-read.table("exp5.file.txt",nrow=659) # skip the last line "exp5.file.txt"
#exp2.filename$frame<-1:nrow(exp2.filename) # is this true? no
exp5.filename.number<-gsub("(exp4000)([[:digit:]]+)(.jpg)","\\2",exp5.filename[,1])
exp5.filename$frame<- as.integer(exp5.filename.number) - min(as.integer(exp5.filename.number))+1 # more general formula
# reading file name used in exp6
exp6.filename<-read.table("exp6.file.txt",nrow=1061) # skip the last line "exp6.file.txt"
exp6.filename.number<-gsub("(exp5000)([[:digit:]]+)(.jpg)","\\2",exp6.filename[,1])
exp6.filename$frame<- as.integer(exp6.filename.number) - min(as.integer(exp6.filename.number))+1 #
# reading hypocotyl length data
hyp.data<-read.csv("Marian_gi2pif3_hyp_data - 2nd sets.csv")
# need to clean up data (no duplicate)
hyp.data$id<-paste(sub("(2016pifgi2exp)(1a_|1b_|2a_|2b_|3a_|3b_)(Col|gi2|pif4pif5|gi2pif4|gi2pif5|gi2pif4pif5)(.avi:)([[:digit:]]+)([[:print:]]+)","\\1\\2\\3\\4\\5",hyp.data$label),hyp.data$rep,sep="_")
hyp.data[duplicated(hyp.data$id),] # should be none. If duplicated, remove duplicated data from Google Sheet
filetime<-read.table("2016pifgi2filetime2s.txt",skip=8)#,nrows=869)
head(filetime)
tail(filetime)
# reading file name used in exp1
exp4.filename<-read.table("exp4.file.txt",skip=1) # 540 files
# add 336 to 1 (frmae number in exp1 avi )
exp4.filename$frame<-1:nrow(exp4.filename)
# reading file name used in exp5
exp5.filename<-read.table("exp5.file.txt",nrow=659) # skip the last line "exp5.file.txt"
#exp2.filename$frame<-1:nrow(exp2.filename) # is this true? no
exp5.filename.number<-gsub("(exp4000)([[:digit:]]+)(.jpg)","\\2",exp5.filename[,1])
exp5.filename$frame<- as.integer(exp5.filename.number) - min(as.integer(exp5.filename.number))+1 # more general formula
# reading file name used in exp6
exp6.filename<-read.table("exp6.file.txt",nrow=1061) # skip the last line "exp6.file.txt"
exp6.filename.number<-gsub("(exp5000)([[:digit:]]+)(.jpg)","\\2",exp6.filename[,1])
exp6.filename$frame<- as.integer(exp6.filename.number) - min(as.integer(exp6.filename.number))+1 #
# reading hypocotyl length data
hyp.data<-read.csv("Marian_gi2pif3_hyp_data - 2nd sets.csv")
# need to clean up data (no duplicate)
hyp.data$id<-paste(sub("(2016pifgi2exp)(1a_|1b_|2a_|2b_|3a_|3b_)(Col|gi2|pif4pif5|gi2pif4|gi2pif5|gi2pif4pif5)(.avi:)([[:digit:]]+)([[:print:]]+)","\\1\\2\\3\\4\\5",hyp.data$label),hyp.data$rep,sep="_")
hyp.data[duplicated(hyp.data$id),] # should be none. If duplicated, remove duplicated data from Google Sheet
# reading hypocotyl length data
hyp.data<-read.csv("Marian_gi2pif3_hyp_data - 2nd sets.csv")
# need to clean up data (no duplicate)
hyp.data$id<-paste(sub("(2016pifgi2exp)(1a_|1b_|2a_|2b_|3a_|3b_)(Col|gi2|pif4pif5|gi2pif4|gi2pif5|gi2pif4pif5)(.avi:)([[:digit:]]+)([[:print:]]+)","\\1\\2\\3\\4\\5",hyp.data$label),hyp.data$rep,sep="_")
hyp.data[duplicated(hyp.data$id),] # should be none. If duplicated, remove duplicated data from Google Sheet
# reading hypocotyl length data
# reading hypocotyl length data
hyp.data<-read.csv("Marian_gi2pif3_hyp_data - 2nd sets.csv")
# need to clean up data (no duplicate)
hyp.data$id<-paste(sub("(2016pifgi2exp)(1a_|1b_|2a_|2b_|3a_|3b_)(Col|gi2|pif4pif5|gi2pif4|gi2pif5|gi2pif4pif5)(.avi:)([[:digit:]]+)([[:print:]]+)","\\1\\2\\3\\4\\5",hyp.data$label),hyp.data$rep,sep="_")
hyp.data[duplicated(hyp.data$id),] # should be none. If duplicated, remove duplicated data from Google Sheet
# reading hypocotyl length data
hyp.data<-read.csv("Marian_gi2pif3_hyp_data - 2nd sets.csv")
# need to clean up data (no duplicate)
hyp.data$id<-paste(sub("(2016pifgi2exp)(1a_|1b_|2a_|2b_|3a_|3b_)(Col|gi2|pif4pif5|gi2pif4|gi2pif5|gi2pif4pif5)(.avi:)([[:digit:]]+)([[:print:]]+)","\\1\\2\\3\\4\\5",hyp.data$label),hyp.data$rep,sep="_")
hyp.data[duplicated(hyp.data$id),] # should be none. If duplicated, remove duplicated data from Google Sheet
# reading hypocotyl length data
hyp.data<-read.csv("Marian_gi2pif3_hyp_data - 2nd sets.csv")
# need to clean up data (no duplicate)
# reading hypocotyl length data
hyp.data<-read.csv("Marian_gi2pif3_hyp_data - 2nd sets.csv")
# need to clean up data (no duplicate)
hyp.data$id<-paste(sub("(2016pifgi2exp)(1a_|1b_|2a_|2b_|3a_|3b_)(Col|gi2|pif4pif5|gi2pif4|gi2pif5|gi2pif4pif5)(.avi:)([[:digit:]]+)([[:print:]]+)","\\1\\2\\3\\4\\5",hyp.data$label),hyp.data$rep,sep="_")
hyp.data[duplicated(hyp.data$id),] # should be none. If duplicated, remove duplicated data from Google Sheet
# reading hypocotyl length data
hyp.data<-read.csv("Marian_gi2pif3_hyp_data - 2nd sets.csv")
# need to clean up data (no duplicate)
hyp.data$id<-paste(sub("(2016pifgi2exp)(1a_|1b_|2a_|2b_|3a_|3b_)(Col|gi2|pif4pif5|gi2pif4|gi2pif5|gi2pif4pif5)(.avi:)([[:digit:]]+)([[:print:]]+)","\\1\\2\\3\\4\\5",hyp.data$label),hyp.data$rep,sep="_")
hyp.data[duplicated(hyp.data$id),] # should be none. If duplicated, remove duplicated data from Google Sheet
####### data cleaning on going #########
# change pixel into mm
scale<- 95/1220.3213 # 95 mm is 1220.3213 pixel
hyp.data$mm<-hyp.data$pixel * scale
# merge time stamp data and hyp.data
## extract avi movie frame name
hyp.data$frame<-as.integer(sub("(2016pifgi2exp)(1a_|1b_|2a_|2b_|3a_|3b_)(Col|gi2|pif4pif5|gi2pif4|gi2pif5|gi2pif4pif5)(.avi:)([[:digit:]]+)([[:print:]]+)","\\5",hyp.data$label))
# obtaining file date/time (exp4)
hyp.data[hyp.data$exp==4,"file"]<-as.character(vlookup(hyp.data[hyp.data$exp==4,"frame"],exp4.filename[,2:1],2))
str(hyp.data)
# obtaining file date/time (exp5)
hyp.data[hyp.data$exp==5,"file"]<-as.character(vlookup(hyp.data[hyp.data$exp==5,"frame"],exp5.filename[,2:1],2))
# obtaining file date/time (exp6)
hyp.data[hyp.data$exp==6,"file"]<-as.character(vlookup(hyp.data[hyp.data$exp==6,"frame"],exp6.filename[,2:1],2))
## obtain file date/time stamp (exp4,exp5 and exp6)
hyp.data$date<-vlookup(hyp.data$file,filetime[,c("V4","V1")],2)
hyp.data$time<-vlookup(hyp.data$file,filetime[,c("V4","V2")],2)
## converted to "POSIXlt" (see ?strptime)
hyp.data$date.time<-strptime(paste(hyp.data$date,hyp.data$time,sep="/"),"%m/%d/%Y/%H:%M")
#
summary(hyp.data)
## day1
exp4.start.date.time<-strptime("11/7/2016/8:00","%m/%d/%Y/%H:%M") # start date time for exp4
exp5.start.date.time<-strptime("11/17/2016/8:00","%m/%d/%Y/%H:%M") # start date time for exp5
exp6.start.date.time<-strptime("12/14/2016/8:00","%m/%d/%Y/%H:%M") # start date time for exp6
## day-night cycle (7:00 - 15:00 is day). No. 8:00 - 16:00 was day (after correction of daylight saving on Nov 1)
# calculate hours after stratification
# cf. hyp.data$date.time - start.date.time gave me units="days"
# for exp4
hyp.data[hyp.data$exp==4,"after.stratification_hr"]<-
as.numeric(gsub(" hours","",difftime(hyp.data[hyp.data$exp==4,"date.time"],exp4.start.date.time,units="hours"))) # see more in ?difftime
# for exp5
hyp.data[hyp.data$exp==5,"after.stratification_hr"]<-
as.numeric(gsub(" hours","",difftime(hyp.data[hyp.data$exp==5,"date.time"],exp5.start.date.time,units="hours"))) # see more in ?difftime
#
# for exp6
hyp.data[hyp.data$exp==6,"after.stratification_hr"]<-
as.numeric(gsub(" hours","",difftime(hyp.data[hyp.data$exp==6,"date.time"],exp6.start.date.time,units="hours"))) # see more in ?difftime
str(hyp.data)
head(hyp.data)
summary(hyp.data)
```
# calculate growth rate. how to ? exp1 and exp2 has different. And then smoothing curve as Julind did in Holtan (2011) Plant Physiol?
```{r}
# from Julin's scripts "TLsmoothMND MAR.R"
calcRate <- function(x) { #no running average
x <- x[order(x$after.stratification_hr),]
x$rate <- NA
for (i in 2:nrow(x)) {
x$rate[i] <- (x$y[i]-x$y[i-1]) / (x$after.stratification_hr[i] -x$after.stratification_hr[i-1])
}
x
}
# under construction
#names(hyp.data)<-sub("after.stratification_hr","time",names(hyp.data))
names(hyp.data)<-sub("mm","y",names(hyp.data))
hyp.data$sample<-with(hyp.data,paste(exp,plate,genotype,rep,sep="_"))
rate.list <- by(hyp.data,hyp.data$sample,calcRate)
tl.rates <- rate.list[[1]]              #need to recompile the list of dataframes into one dataframe.  this will hold it
for (i in 2:length(rate.list)) tl.rates <- rbind(tl.rates,rate.list[[i]]) #merge into one frame
# tl.rates2 <- tl.rates[complete.cases(tl.rates),]  #remove rows with no data.(from J). Error in complete.cases(tl.rates) : not all arguments have the same length (Kazu)
tl.rates3<-tl.rates[!is.na(tl.rates$rate),]
# plot (height version)
p.height<-ggplot(hyp.data,aes(x=after.stratification_hr,y=y,color=as.factor(rep),shape=factor(exp))) + geom_point()+facet_grid(genotype~exp)
p.height
# plot (growth rate version)
night <- seq(8,max(tl.rates$after.stratification_hr),24)
day <- seq(24,max(tl.rates$after.stratification_hr),24)
if (length(night)>length(day)) day <- c(day,max(tl.rates$after.stratification_hr))
bottom <- rep(-0.02,length(night))
top <- rep(0.11,length(night)) # for mm
#top <- rep(1,length(night)) # for pixel
#data frame to hold coordinates for nighttime rectangles
rectangles <- data.frame(night,day,top,bottom,rate=0,after.stratification_hr=0)
rm(night,day,top,bottom)
# remove data not this time range, which did not solve an error in geom_smooth()
# tl.rates4<-tl.rates3[tl.rates3$after.stratification_hr>24*5|tl.rates3$after.stratification_hr<24*12,]
#
#p.growthrate<- ggplot(data=tl.rates,aes(y=rate,x=after.stratification_hr))  + facet_wrap(~genotype,ncol=1) + theme_classic()
p.growthrate<- ggplot(data=tl.rates3,aes(y=rate,x=after.stratification_hr))  + facet_grid(genotype~.)
p.growthrate <- p.growthrate + geom_rect(data=rectangles,mapping=aes(xmin=night,xmax=day,ymin=bottom,ymax=top),fill="grey80")
#p.growthrate <- p.growthrate + geom_smooth(stat="smooth",fill="grey20",method="loess",span=.1,n=200)
p.growthrate <- p.growthrate + geom_smooth(stat="smooth",fill="grey20",method="loess",span=.1,n=200) # needs to play with span and n
#p.growthrate <- p.growthrate + scale_x_continuous(limits=c(24*5,24*12))
p.growthrate <- p.growthrate + theme(
axis.text.x=element_text(size=18),
#axis.ticks = element_blank(),
panel.background = element_rect(fill = "white")) +
labs(x="Time (h)",y="growth rate (mm/hr)")
p.growthrate <- p.growthrate + coord_cartesian(xlim=c(24*2,24*7),ylim=c(-0.001,0.09))
p.growthrate
tl.rates3
head(tl.rates3)
hist(tl.rates3[tl.rates3$genotype=="Col","rate"])
tl.rates3[[tl.rates3$genotype=="Col","rate"]<-2,]
tl.rates3[tl.rate3[tl.rates3$genotype=="Col","rate"]<-2,]
tl.rates3[tl.rates3[tl.rates3$genotype=="Col","rate"]<-2,]
tl.rates3[tl.rates3[tl.rates3$genotype=="Col","rate"]< -2,]
tl.rates3[tl.rates3[tl.rates3$genotype=="Col","rate"]<-2,]
tl.rates3[tl.rates3[tl.rates3$genotype=="Col","rate"]< -2,]
tl.rates3<-tl.rates[!is.na(tl.rates$rate),]
tl.rates3.Col.rate<-tl.rates3[tl.rates3$genotype=="Col","rate"]
hist(tl.rates3.Col.rate)
tl.rates3.Col<-tl.rates3[tl.rates3$genotype=="Col",]
tl.rates3.Col$rate< -2
tl.rates3.Col[tl.rates3.Col$rate< -2,]
tl.rates3.Col
tl.rates3.Col[tl.rates3.Col$rate< -2,] # why???
head(tl.rates3.Col)
names(rate.list)
rate.list[[45]]
names(rate.list)
rate.list[[17]]
# reading hypocotyl length data
hyp.data<-read.csv("Marian_gi2pif3_hyp_data - 2nd sets.csv")
# need to clean up data (no duplicate)
hyp.data$id<-paste(sub("(2016pifgi2exp)(1a_|1b_|2a_|2b_|3a_|3b_)(Col|gi2|pif4pif5|gi2pif4|gi2pif5|gi2pif4pif5)(.avi:)([[:digit:]]+)([[:print:]]+)","\\1\\2\\3\\4\\5",hyp.data$label),hyp.data$rep,sep="_")
hyp.data[duplicated(hyp.data$id),] # should be none. If duplicated, remove duplicated data from Google Sheet
ftable(hypdata[,c("exp","plate","genotype","rep")],col.vars=c("plate","rep"),row.vars=c("genotype","exp"))
ftable(hyp.data[,c("exp","plate","genotype","rep")],col.vars=c("plate","rep"),row.vars=c("genotype","exp"))
if(Sys.info()["user"]=="nozue") {
homedir<-"/Volumes/data_work/Data6/data_JM4/2016pif3gi2_timelapse"
} # customize homedir
setwd(homedir)
#
# reading file time stamp
## This file was created in MSDOS (Celia cam computer) by "dir" command
filetime<-read.table("2016pifgi2filetime2s.txt",skip=8)#,nrows=869)
head(filetime)
tail(filetime)
# reading file name used in exp1
exp4.filename<-read.table("exp4.file.txt",skip=1) # 540 files
# add 336 to 1 (frmae number in exp1 avi )
exp4.filename$frame<-1:nrow(exp4.filename)
# reading file name used in exp5
exp5.filename<-read.table("exp5.file.txt",nrow=659) # skip the last line "exp5.file.txt"
#exp2.filename$frame<-1:nrow(exp2.filename) # is this true? no
exp5.filename.number<-gsub("(exp4000)([[:digit:]]+)(.jpg)","\\2",exp5.filename[,1])
exp5.filename$frame<- as.integer(exp5.filename.number) - min(as.integer(exp5.filename.number))+1 # more general formula
# reading file name used in exp6
exp6.filename<-read.table("exp6.file.txt",nrow=1061) # skip the last line "exp6.file.txt"
exp6.filename.number<-gsub("(exp5000)([[:digit:]]+)(.jpg)","\\2",exp6.filename[,1])
exp6.filename$frame<- as.integer(exp6.filename.number) - min(as.integer(exp6.filename.number))+1 #
# reading hypocotyl length data
hyp.data<-read.csv("Marian_gi2pif3_hyp_data - 2nd sets.csv")
# need to clean up data (no duplicate)
hyp.data$id<-paste(sub("(2016pifgi2exp)(1a_|1b_|2a_|2b_|3a_|3b_)(Col|gi2|pif4pif5|gi2pif4|gi2pif5|gi2pif4pif5)(.avi:)([[:digit:]]+)([[:print:]]+)","\\1\\2\\3\\4\\5",hyp.data$label),hyp.data$rep,sep="_")
hyp.data[duplicated(hyp.data$id),] # should be none. If duplicated, remove duplicated data from Google Sheet
####### data cleaning on going #########
ftable(hyp.data[,c("exp","plate","genotype","rep")],col.vars=c("plate","rep"),row.vars=c("genotype","exp"))
if(Sys.info()["user"]=="nozue") {
homedir<-"/Volumes/data_work/Data6/data_JM4/2016pif3gi2_timelapse"
} # customize homedir
setwd(homedir)
#
# reading file time stamp
## This file was created in MSDOS (Celia cam computer) by "dir" command
filetime<-read.table("2016pifgi2filetime2s.txt",skip=8)#,nrows=869)
head(filetime)
tail(filetime)
# reading file name used in exp1
exp4.filename<-read.table("exp4.file.txt",skip=1) # 540 files
# add 336 to 1 (frmae number in exp1 avi )
exp4.filename$frame<-1:nrow(exp4.filename)
# reading file name used in exp5
exp5.filename<-read.table("exp5.file.txt",nrow=659) # skip the last line "exp5.file.txt"
#exp2.filename$frame<-1:nrow(exp2.filename) # is this true? no
exp5.filename.number<-gsub("(exp4000)([[:digit:]]+)(.jpg)","\\2",exp5.filename[,1])
exp5.filename$frame<- as.integer(exp5.filename.number) - min(as.integer(exp5.filename.number))+1 # more general formula
# reading file name used in exp6
exp6.filename<-read.table("exp6.file.txt",nrow=1061) # skip the last line "exp6.file.txt"
exp6.filename.number<-gsub("(exp5000)([[:digit:]]+)(.jpg)","\\2",exp6.filename[,1])
exp6.filename$frame<- as.integer(exp6.filename.number) - min(as.integer(exp6.filename.number))+1 #
# reading hypocotyl length data
hyp.data<-read.csv("Marian_gi2pif3_hyp_data - 2nd sets.csv")
# need to clean up data (no duplicate)
hyp.data$id<-paste(sub("(2016pifgi2exp)(1a_|1b_|2a_|2b_|3a_|3b_)(Col|gi2|pif4pif5|gi2pif4|gi2pif5|gi2pif4pif5)(.avi:)([[:digit:]]+)([[:print:]]+)","\\1\\2\\3\\4\\5",hyp.data$label),hyp.data$rep,sep="_")
hyp.data[duplicated(hyp.data$id),] # should be none. If duplicated, remove duplicated data from Google Sheet
####### data cleaning on going #########
ftable(hyp.data[,c("exp","plate","genotype","rep")],col.vars=c("plate","rep"),row.vars=c("genotype","exp"))
# reading hypocotyl length data
hyp.data<-read.csv("Marian_gi2pif3_hyp_data - 2nd sets.csv")
# need to clean up data (no duplicate)
hyp.data$id<-paste(sub("(2016pifgi2exp)(1a_|1b_|2a_|2b_|3a_|3b_)(Col|gi2|pif4pif5|gi2pif4|gi2pif5|gi2pif4pif5)(.avi:)([[:digit:]]+)([[:print:]]+)","\\1\\2\\3\\4\\5",hyp.data$label),hyp.data$rep,sep="_")
hyp.data[duplicated(hyp.data$id),] # should be none. If duplicated, remove duplicated data from Google Sheet
# reading hypocotyl length data
hyp.data<-read.csv("Marian_gi2pif3_hyp_data - 2nd sets.csv")
# reading hypocotyl length data
hyp.data<-read.csv("Marian_gi2pif3_hyp_data - 2nd sets.csv")
# need to clean up data (no duplicate)
hyp.data$id<-paste(sub("(2016pifgi2exp)(1a_|1b_|2a_|2b_|3a_|3b_)(Col|gi2|pif4pif5|gi2pif4|gi2pif5|gi2pif4pif5)(.avi:)([[:digit:]]+)([[:print:]]+)","\\1\\2\\3\\4\\5",hyp.data$label),hyp.data$rep,sep="_")
hyp.data[duplicated(hyp.data$id),] # should be none. If duplicated, remove duplicated data from Google Sheet
